name: Publish @gratiaos packages

on:
  workflow_dispatch:
  push:
    tags:
      - 'pkg-v*'

permissions:
  contents: read
  id-token: write

jobs:
  publish:
    runs-on: ubuntu-latest
    env:
      NODE_AUTH_TOKEN: ''
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org
          scope: '@gratiaos'
          always-auth: false

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10.19.0

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm -r build

      - name: Workspace vs Registry versions
        run: |
          echo "â”€ workspace (name@version)"
          pnpm -r --filter "@gratiaos/*" exec node -p "require('./package.json').name + '@' + require('./package.json').version"
          echo "â”€ registry"
          npm view @gratiaos/icons versions --json || true
          npm view @gratiaos/ui versions --json || true
          npm view @gratiaos/tokens versions --json || true
          npm view @gratiaos/pad-core versions --json || true

      - name: Sanitize npmrc for OIDC (remove token auth)
        run: |
          echo "Using userconfig: $NPM_CONFIG_USERCONFIG"
          if test -f "$NPM_CONFIG_USERCONFIG"; then
            echo "--- before" && cat "$NPM_CONFIG_USERCONFIG" || true
            # Remove any token-based auth lines so npm uses OIDC
            sed -i '/_authToken/d' "$NPM_CONFIG_USERCONFIG" || true
            sed -i '/always-auth/d' "$NPM_CONFIG_USERCONFIG" || true
          fi
          # Ensure scoped registry is present
          echo "@gratiaos:registry=https://registry.npmjs.org/" >> "$NPM_CONFIG_USERCONFIG"
          echo "--- after" && cat "$NPM_CONFIG_USERCONFIG" || true

      - name: Ensure OIDC auth (no legacy token)
        run: |
          echo "userconfig: $NPM_CONFIG_USERCONFIG"
          test -f "$NPM_CONFIG_USERCONFIG" && cat "$NPM_CONFIG_USERCONFIG" || echo "(no userconfig yet)"
          echo "NODE_AUTH_TOKEN was: ${NODE_AUTH_TOKEN:+set}"
          unset NODE_AUTH_TOKEN
          echo "NODE_AUTH_TOKEN now: ${NODE_AUTH_TOKEN:+set}"
          # explicitly enable provenance
          npm config set provenance true

      - name: Publish each package if this version is missing
        run: |
          pnpm -r --filter "@gratiaos/*" exec bash -lc '
            set -euo pipefail
            NAME=$(node -p "require(\"./package.json\").name")
            VER=$(node -p "require(\"./package.json\").version")
            if npm view "$NAME@$VER" version >/dev/null 2>&1; then
              echo "ðŸŸ¡ skip $NAME@$VER (already on registry)"
            else
              echo "ðŸŸ¢ publish $NAME@$VER (OIDC + provenance)"
              npm publish --access public --provenance --registry https://registry.npmjs.org/
            fi
          '
        env:
          NPM_CONFIG_PROVENANCE: true
